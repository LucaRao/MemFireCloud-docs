<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开始 on MemFire Cloud在线文档</title>
    <link>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/</link>
    <description>Recent content in 开始 on MemFire Cloud在线文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Dec 2023 17:39:49 +0800</lastBuildDate>
    <atom:link href="https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript库</title>
      <link>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/javascript/</guid>
      <description>@supabase/supabase-js 是 Supabase 官方提供的一个同构 JavaScript 库，MemFire Cloud采用了开源了 Supabase 项目。&#xA;这里详细记录了该库中的所有对象和方法。&#xA;通过使用 supabase-js，你可以实现如下功能：&#xA;与你的 Postgres 数据库进行交互 监听数据库变化 调用 Postgres 函数 构建登录和用户管理功能 管理大文件 相关链接 link 源代码 TypeDoc NPM 已知的错误和问题 </description>
    </item>
    <item>
      <title>安装</title>
      <link>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/installing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/installing/</guid>
      <description>所有的 JavaScript 库都是由 Supabase 团队直接建立的。其他语言由社区构建，并由 Supabase 支持。&#xA;通过终端安装 link你可以通过在终端中执行相应的安装命令来完成@supabase/supabase-js库的安装。&#xA;为你提供两种终端安装的方式（NPM 和 Yarn）：&#xA;@supabase/supabase-js link使用NPM安装&#xA;npm install @supabase/supabase-js&#xD;使用Yarn安装&#xA;yarn add @supabase/supabase-js&#xD;通过CDN安装 link您可以通过 CDN 链接安装 @supabase/supabase-js。&#xA;&amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xD;//or&#xD;&amp;lt;script src=&amp;#34;https://unpkg.com/@supabase/supabase-js@2&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xD;CDN是内容分发网络（Content Delivery Network）的缩写。它是一种用于加速网络资源传输的系统，通过将数据和文件分布在全球各地的多个服务器节点上，使用户可以从离自己地理位置较近的服务器获取所需的内容，从而提高网页加载速度和响应时间。&#xA;Supabase提供了一个通过CDN链接安装 @supabase/supabase-js 的选项。这意味着你可以通过在你的HTML文件中引入相关的CDN链接，来直接使用Supabase的JavaScript客户端库，而无需通过npm或其他包管理工具进行安装。这样做的好处是，当用户访问你的网页时，他们可以从离他们最近的CDN服务器加载Supabase的库，从而更快地获得响应。&#xA;相关链接 link在GitHub上查找源代码。</description>
    </item>
    <item>
      <title>初始化客户端</title>
      <link>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/initializing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/initializing/</guid>
      <description>你可以使用 createClient() 方法初始化一个新的 Supabase 客户端。&#xA;Supabase 客户端是你访问 Supabase 其他功能的入口是与我们在 Supabase 生态系统中提供的所有功能进行交互的最简单方法。&#xA;案例教程 link案例1 （createClient()） link&#xD;使用方法&#xD;如果密码超过72个字符，它将被截断为前72个字符。&#xA;import { createClient } from &amp;#39;@supabase/supabase-js&amp;#39;&#xD;// Create a single supabase client for interacting with your database&#xD;const supabase = createClient(&amp;#39;https://xyzcompany.supabase.co&amp;#39;, &amp;#39;public-anon-key&amp;#39;)&#xD;使用自定义域名：&#xA;import { createClient } from &amp;#39;@supabase/supabase-js&amp;#39;&#xD;// Use a custom domain as the supabase URL&#xD;const supabase = createClient(&amp;#39;https://my-custom-domain.com&amp;#39;, &amp;#39;public-anon-key&amp;#39;)&#xD;案例2 （带附加参数的情况） link&#xD;使用方法&#xD;import { createClient } from &amp;#39;@supabase/supabase-js&amp;#39;&#xD;const options = {&#xD;db: {&#xD;schema: &amp;#39;public&amp;#39;,&#xD;},&#xD;auth: {&#xD;autoRefreshToken: true,&#xD;persistSession: true,&#xD;detectSessionInUrl: true&#xD;},&#xD;global: {&#xD;headers: { &amp;#39;x-my-custom-header&amp;#39;: &amp;#39;my-app-name&amp;#39; },&#xD;},&#xD;}&#xD;const supabase = createClient(&amp;#34;https://xyzcompany.</description>
    </item>
    <item>
      <title>支持Typescript</title>
      <link>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/typescript-support/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/typescript-support/</guid>
      <description>supabase-js支持Typescript。&#xA;生成类型 link你可以使用我们的CLI来生成类型。&#xA;supabase start&#xD;supabase gen types typescript --local &amp;gt; lib/database.types.ts&#xD;这些类型是直接从你的数据库中生成的。给定一个表public.movies，该定义将提供以下数据。&#xA;interface Database {&#xD;public: {&#xD;Tables: {&#xD;movies: {&#xD;Row: {} // The data expected to be returned from a &amp;#34;select&amp;#34; statement.&#xD;Insert: {} // The data expected passed to an &amp;#34;insert&amp;#34; statement.&#xD;Update: {} // The data expected passed to an &amp;#34;update&amp;#34; statement.&#xD;}&#xD;}&#xD;}&#xD;}&#xD;在 &amp;ldquo;选择&amp;rdquo;、&amp;ldquo;插入 &amp;ldquo;和 &amp;ldquo;更新 &amp;ldquo;之间是有区别的，因为通常你会在数据库中为特定的列设置默认值。 有了默认值，你就不需要通过网络发送任何数据，即使该列是一个 &amp;ldquo;必填 &amp;ldquo;字段。我们的类型系统是精细的 足以处理这些情况。</description>
    </item>
    <item>
      <title>版本说明</title>
      <link>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.memfiredb.com/docs/app/sdkdocs/javascript/start/release-notes/</guid>
      <description>Supabase.js是Supabase数据库服务的官方JavaScript客户端库，用于与Supabase API进行交互。 最新版本Supabase.js v2带来了一系列令人振奋的新特性、更新和改进，使开发者在构建现代Web应用程序时拥有更加强大和灵活的工具。&#xA;让我们深入了解这些新功能，并看看它们如何改进您的Supabase体验！接下来，我们将逐步探索Supabase.js v2的亮点和特性，帮助您更好地了解这个新版本。&#xA;首先需要用npm install @supabase/supabase-js安装最新版本。&#xA;明确的构造器选项 link构造函数中的所有客户端特定选项都是键入库的。&#xA;const supabase = createClient(apiURL, apiKey, {&#xD;db: {&#xD;schema: &amp;#39;public&amp;#39;,&#xD;},&#xD;auth: {&#xD;storage: AsyncStorage,&#xD;autoRefreshToken: true,&#xD;persistSession: true,&#xD;detectSessionInUrl: true,&#xD;},&#xD;realtime: {&#xD;channels,&#xD;endpoint,&#xD;},&#xD;global: {&#xD;fetch: customFetch,&#xD;headers: DEFAULT_HEADERS,&#xD;},&#xD;})&#xD;支持typescript link这些库现在支持typescript。&#xA;// v2 - definitions are injected in `createClient()`&#xD;import type { Database } from &amp;#39;./DatabaseDefinitions&amp;#39;&#xD;const supabase = createClient&amp;lt;Database&amp;gt;(SUPABASE_URL, ANON_KEY)&#xD;const { data } = await supabase.</description>
    </item>
  </channel>
</rss>
