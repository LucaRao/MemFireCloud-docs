<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发示例 on My New Hugo Site</title>
    <link>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/</link>
    <description>Recent content in 开发示例 on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Dec 2023 17:39:49 +0800</lastBuildDate>
    <atom:link href="https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python示例</title>
      <link>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/python-example/</link>
      <pubDate>Wed, 13 Dec 2023 17:39:49 +0800</pubDate>
      <guid>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/python-example/</guid>
      <description>MemFire Cloud 提供Python、Java、spring、golang、nodejs、小程序开发示例，讲述如何编译执行程序，帮助用户如何采用多种语言来使用连接MemFire Cloud的云数据库。&#xA;示例下载地址&#xA;python示例下载地址：https://gitee.com/memfiredb/memfiredb-example-python&#xA;环境描述&#xA;•&#x9;python 2.7&#xA;•&#x9;pip install sqlalchemy==1.3.23&#xA;•&#x9;pip install psycopg2-binary&#xA;创建示例应用&#xA;1、加密连接&#xA;•&#x9;登录cloud.memfiredb.com创建证书认证数据库test，并下载证书，python程序请选择“常规”类型的证书&#xA;•&#x9;下载证书时，会下载三个文件，有的浏览器可能会进行拦截，取消拦截即可&#xA;•&#x9;证书下载后上传的linux服务器之后，要确保memfiredb.key文件的权限是0600，否则程序会抛出异常&#xA;•&#x9;sslmode选择“verify-ca”&#xA;（1）编辑代码文件main.py，文件内容如下：&#xA;# -*- coding: utf-8 -*-&#xD;&amp;#34;&amp;#34;&amp;#34;&#xD;Copyright (c) 2020, Nimblex Co .,Ltd.&#xD;Created on 2020-12-11 11:28&#xD;&amp;#34;&amp;#34;&amp;#34;&#xD;import sys&#xD;from sqlalchemy.ext.declarative import declarative_base&#xD;from sqlalchemy import Column, Integer&#xD;from sqlalchemy import create_engine&#xD;from sqlalchemy.orm import sessionmaker&#xD;import sqlalchemy.engine.url as url&#xD;Base = declarative_base()&#xD;class Counter(Base):&#xD;__tablename__ = &amp;#39;counters&amp;#39;&#xD;id = Column(Integer, primary_key=True)&#xD;counter = Column(Integer)&#xD;engine = None&#xD;def init_db_engine(host, port, dbname, user, passwd, ssl_ca, ssl_cert, ssl_key):&#xD;global engine&#xD;uri = url.</description>
    </item>
    <item>
      <title>Java示例</title>
      <link>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/java-example/</link>
      <pubDate>Wed, 13 Dec 2023 17:39:49 +0800</pubDate>
      <guid>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/java-example/</guid>
      <description>MemFire Cloud 提供Python、Java、spring、golang、nodejs、小程序开发示例，讲述如何编译执行程序，帮助用户如何采用多种语言来使用连接MemFire Cloud的云数据库。&#xA;示例下载地址&#xA;Java示例下载地址：https://gitee.com/memfiredb/memfiredb-example-java&#xA;环境描述&#xA;•&#x9;Java Development Kit (JDK) 1.8, or later&#xA;•&#x9;Apache Maven 3.3 or later&#xA;创建示例应用&#xA;1、创建POM&#xA;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&#xD;&amp;lt;project&#xD;xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&#xD;xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&#xD;xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&amp;gt;&#xD;&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&#xD;&amp;lt;groupId&amp;gt;cn.nimblex.apps&amp;lt;/groupId&amp;gt;&#xD;&amp;lt;artifactId&amp;gt;mfsample&amp;lt;/artifactId&amp;gt;&#xD;&amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;&#xD;&amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;&#xD;&amp;lt;dependencies&amp;gt;&#xD;&amp;lt;dependency&amp;gt;&#xD;&amp;lt;groupId&amp;gt;org.postgresql&amp;lt;/groupId&amp;gt;&#xD;&amp;lt;artifactId&amp;gt;postgresql&amp;lt;/artifactId&amp;gt;&#xD;&amp;lt;version&amp;gt;42.2.5&amp;lt;/version&amp;gt;&#xD;&amp;lt;/dependency&amp;gt;&#xD;&amp;lt;/dependencies&amp;gt;&#xD;&amp;lt;build&amp;gt;&#xD;&amp;lt;plugins&amp;gt;&#xD;&amp;lt;plugin&amp;gt;&#xD;&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&#xD;&amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;&#xD;&amp;lt;version&amp;gt;3.7.0&amp;lt;/version&amp;gt;&#xD;&amp;lt;configuration&amp;gt;&#xD;&amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt;&#xD;&amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt;&#xD;&amp;lt;/configuration&amp;gt;&#xD;&amp;lt;/plugin&amp;gt;&#xD;&amp;lt;plugin&amp;gt;&#xD;&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&#xD;&amp;lt;artifactId&amp;gt;maven-dependency-plugin&amp;lt;/artifactId&amp;gt;&#xD;&amp;lt;version&amp;gt;2.1&amp;lt;/version&amp;gt;&#xD;&amp;lt;executions&amp;gt;&#xD;&amp;lt;execution&amp;gt;&#xD;&amp;lt;id&amp;gt;copy-dependencies&amp;lt;/id&amp;gt;&#xD;&amp;lt;phase&amp;gt;prepare-package&amp;lt;/phase&amp;gt;&#xD;&amp;lt;goals&amp;gt;&#xD;&amp;lt;goal&amp;gt;copy-dependencies&amp;lt;/goal&amp;gt;&#xD;&amp;lt;/goals&amp;gt;&#xD;&amp;lt;configuration&amp;gt;&#xD;&amp;lt;outputDirectory&amp;gt;${project.build.directory}/lib&amp;lt;/outputDirectory&amp;gt;&#xD;&amp;lt;overWriteReleases&amp;gt;true&amp;lt;/overWriteReleases&amp;gt;&#xD;&amp;lt;overWriteSnapshots&amp;gt;true&amp;lt;/overWriteSnapshots&amp;gt;&#xD;&amp;lt;overWriteIfNewer&amp;gt;true&amp;lt;/overWriteIfNewer&amp;gt;&#xD;&amp;lt;/configuration&amp;gt;&#xD;&amp;lt;/execution&amp;gt;&#xD;&amp;lt;/executions&amp;gt;&#xD;&amp;lt;/plugin&amp;gt;&#xD;&amp;lt;/plugins&amp;gt;&#xD;&amp;lt;/build&amp;gt;&#xD;&amp;lt;/project&amp;gt;&#xD;执行如下命令，创建目录</description>
    </item>
    <item>
      <title>Golang示例</title>
      <link>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/golang-example/</link>
      <pubDate>Wed, 13 Dec 2023 17:39:49 +0800</pubDate>
      <guid>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/golang-example/</guid>
      <description>MemFire Cloud 提供Python、Java、spring、golang、nodejs、小程序开发示例，讲述如何编译执行程序，帮助用户如何采用多种语言来使用连接MemFire Cloud的云数据库。&#xA;示例下载地址&#xA;Golang示例下载地址：https://gitee.com/memfiredb/memfiredb-example-golang&#xA;环境描述 •&#x9;Go version 1.8 , or later&#xA;•&#x9;Go PostgreSQL driver 已经安装&#xA;go get github.com/lib/pq 创建示例应用&#xA;1、加密连接&#xA;•&#x9;在MemFire Cloud平台上完成注册操作，并创建证书认证的数据库test&#xA;•&#x9;点击数据库test的连接信息，下载访问证书，需要包括memfiredb.crt memfiredb.key root.crt，并拷贝到运行go程序的环境下；&#xA;创建源码文件main.go，文件内容如下:&#xA;/**&#xD;Copyright (c) 2020, Nimblex Co .,Ltd.&#xD;Created on 2020-07-21 19:35&#xD;**/&#xD;package main&#xD;import (&#xD;&amp;#34;database/sql&amp;#34;&#xD;_ &amp;#34;github.com/lib/pq&amp;#34;&#xD;&amp;#34;log&amp;#34;&#xD;)&#xD;func main() {&#xD;db, err := sql.Open(&amp;#34;postgres&amp;#34;, &amp;#34;user=test password=test dbname=test host=192.168.80.161 port=5433 sslmode=require sslcert=./memfiredb.crt sslkey=./memfiredb.key sslrootcert=./ca.crt&amp;#34;)&#xD;if err !</description>
    </item>
    <item>
      <title>Spring示例</title>
      <link>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/spring-example/</link>
      <pubDate>Wed, 13 Dec 2023 17:39:49 +0800</pubDate>
      <guid>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/spring-example/</guid>
      <description>MemFire Cloud 提供Python、Java、spring、golang、nodejs、小程序开发示例，讲述如何编译执行程序，帮助用户如何采用多种语言来使用连接MemFire Cloud的云数据库。&#xA;示例下载地址 Spring示例下载地址：https://gitee.com/memfiredb/mefiredb-example-spring&#xA;1、下载证书【可选-如果创建数据库时未勾选证书认证则不需要】&#xA;2、登录cloud.memfiredb.com 创建数据库并下载证书，证书类型选择“jdbc” 将下载的证书保存到合适的路径，本示例例中保存到/home/.memfiredb/中 查看数据库信息，包括服务器地址、数据库名、用户名、密码&#xA;3、修改配置文件中datasource【如果创建数据库时未勾选证书认证则url中不需要配置ssl相关内容】&#xA;src/main/resources/application.properties&#xA;# Data-source config.&#xD;# 请修改服务器地址、数据库名、用户名、密码&#xD;spring.datasource.platform=postgres&#xD;spring.datasource.url=jdbc:postgresql://192.168.80.5:5433/d0000005e2e1ead563d7e1b07a9a444cspring?ssl=true&amp;amp;sslmode=verify-ca&amp;amp;sslcert=/home/.memfiredb/memfiredb.crt&amp;amp;sslkey=/home/.memfiredb/memfiredb.key&amp;amp;sslrootcert=/home/.memfiredb/root.crt&#xD;spring.datasource.username=spring&#xD;spring.datasource.password=spring_123&#xD;4、编译&#xA;$ mvn -DskipTests package&#xD;5、运行&#xA;$ mvn spring-boot:run </description>
    </item>
    <item>
      <title>Node示例</title>
      <link>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/node-example/</link>
      <pubDate>Wed, 13 Dec 2023 17:39:49 +0800</pubDate>
      <guid>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/node-example/</guid>
      <description>MemFire Cloud 提供Python、Java、spring、golang、nodejs、小程序开发示例，讲述如何编译执行程序，帮助用户如何采用多种语言来使用连接MemFire Cloud的云数据库。&#xA;示例下载地址 Node示例下载地址：https://gitee.com/memfiredb/memfiredb-example-nodejs&#xA;环境描述 • node 12&#xA;创建示例应用 1、非加密连接 • 登录cloud.memfiredb.com创建非证书认证数据库test，点击“连接信息”按钮，获取数据库的连接信息。 （1）编辑代码文件，文件内容如下： controller.js:&#xA;const { Client } = require(&amp;#34;pg&amp;#34;);&#xD;let dbUrl = &amp;#39;&amp;#39;&#xD;exports.configuration = (req, res) =&amp;gt; {&#xD;// Validate request&#xD;if (!req.body) {&#xD;res.status(200).send({&#xD;message: &amp;#34;Req body is empty!&amp;#34;&#xD;});&#xD;return;&#xD;}&#xD;const d = req.body;&#xD;// console.log(d)&#xD;dbUrl = `postgresql://${d.username}:${d.passwd}@${d.host}:${d.port}/${d.dbname}`;&#xD;res.status(200).send({&#xD;message: dbUrl&#xD;});&#xD;return;&#xD;}&#xD;exports.sync = async (req, res) =&amp;gt; {&#xD;// Validate request&#xD;if (!</description>
    </item>
    <item>
      <title>C&#43;&#43;示例</title>
      <link>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/c&#43;&#43;-example/</link>
      <pubDate>Wed, 13 Dec 2023 17:39:49 +0800</pubDate>
      <guid>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/c&#43;&#43;-example/</guid>
      <description>MemFire Cloud 提供Python、Java、spring、golang、nodejs、小程序开发示例，讲述如何编译执行程序，帮助用户如何采用多种语言来使用连接MemFire Cloud的云数据库。&#xA;MemFireDB兼容PostgreSQL11.2，在PostgreSQL发行版中只包含两个客户端接口: libpq 和 ECPG。接下来我们会介绍如何编写C++程序，通过libpq客户端来连接访问MemFire Cloud云数据库。&#xA;编译安装libpq linklibpq是主要的C语言接口，而且许多其他客户端接口都是在它之上构建的。&#xA;文档地址： https ://libpqxx.readthedocs.io&#xA;Github 上地址： https ://github.com/jtv/libpqxx&#xA;gitee上地址： https://gitee.com/mirrors/libpqxx/tree/master&#xA;注意，使用libpqxx 7.x版本的需要C++ 17，本次样例使用旧版本的libpqxx(4.0.1)。&#xA;老版本libpqxx-4.0.1下载地址:http://pqxx.org/download/software/libpqxx/libpqxx-4.0.1.tar.gz&#xA;下载源码编译安装：&#xA;wget http://pqxx.org/download/software/libpqxx/libpqxx-4.0.1.tar.gz&#xD;tar -xzf libpqxx-4.0.1.tar.gz&#xD;cd libpqxx-4.0.1&#xD;./configure&#xD;make &amp;amp;&amp;amp; make install&#xD;创建MemFire Cloud云数据库 link登录MemFire Cloud平台，新建数据库，在数据库管理栏中，点击该数据库的“连接信息”，如下图所示，可以获得该数据库的连接配置信息。&#xA;编写程序 link下面是一段C++语言连接MemFire Cloud云数据库，创建数据表，插入数据的一段代码。&#xA;#include &amp;lt;iostream&amp;gt;&#xD;#include &amp;lt;pqxx/pqxx&amp;gt; using namespace std;&#xD;using namespace pqxx;&#xD;int main(int argc, char* argv[])&#xD;{&#xD;const char* sql;&#xD;try{&#xD;/* Establish database connection */&#xD;connection conn(&amp;#34;dbname=db338ea9abb2ed4fadb2cc228002f58899yingyong_db user=aaaa123 password=XXXXX hostaddr=139.</description>
    </item>
    <item>
      <title>C#示例</title>
      <link>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/c-example/</link>
      <pubDate>Wed, 13 Dec 2023 17:39:49 +0800</pubDate>
      <guid>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/c-example/</guid>
      <description>MemFire Cloud 提供Python、Java、spring、golang、node.js、C++、C#、小程序开发示例，讲述如何编译执行程序，帮助用户如何采用多种语言来使用连接MemFire Cloud的云数据库。&#xA;MemFireDB兼容PostgreSQL11.2，采用C# 连接 MemFire Cloud云数据库需使用Npgsql驱动。Npgsql 完全由C# 实现，是免费且开源的。接下来我们会介绍如何编写C#程序，通过Npgsql驱动来连接访问MemFire Cloud云数据库。&#xA;安装Npgsql linkNpgsql是 PostgreSQL 数据库的 ADO.NET 规范的实现,采用 C# 语言编写的驱动程序，适用于所有 .NET 语言。&#xA;1、通过VSCode的管理NuGet安装。&#xA;（1）在VSCode的扩展插件中，搜索并且安装NuGet Package Manager扩展插件；&#xA;（2）使用CTRL + SHIFT + P，输入&amp;gt; NuGet ，在下拉框中选择&amp;gt;NuGet Package Manager:Add Package&#xA;（3）选择浏览，搜索Npgsql，选择合适的版本进行安装。&#xA;2、采用命令行的方式进行安装： 在 Windows、Linux 和 macOS 上安装 .NET Core、.NET 5 及更高版本，参考地址：https://docs.microsoft.com/zh-cn/dotnet/core/install/ 安装完成后，可以通过 .NET CLI 的通用驱动程序dotnet来安装Npgsql。&#xA;dotnet add package Npgsql&#xD;创建MemFire Cloud云数据库 link登录MemFire Cloud平台，新建数据库，在数据库管理栏中，点击该数据库的“连接信息”，如下图所示，可以获得该数据库的连接配置信息。 编写程序 link1、新建文件夹HelloWord，启动 Visual Studio Code，从主菜单中选择“文件”-&amp;gt;“打开文件夹”打开HelloWord文件夹；&#xA;2、在“终端”中输入以下命令：&#xA;dotnet new console --framework net6.0&#xD;3、将 Program.</description>
    </item>
    <item>
      <title>C示例</title>
      <link>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/c2-example/</link>
      <pubDate>Wed, 13 Dec 2023 17:39:49 +0800</pubDate>
      <guid>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/c2-example/</guid>
      <description>MemFire Cloud 提供Python、Java、spring、golang、node.js、C++、C#、小程序开发示例，讲述如何编译执行程序，帮助用户如何采用多种语言来使用连接MemFire Cloud的云数据库。&#xA;MemFireDB兼容PostgreSQL11.2，采用C语言连接 MemFire Cloud云数据库构建应用程序，则需使用 libpq C 驱动程序。接下来我们会介绍如何编写C程序，通过 libpq C驱动来连接访问MemFire Cloud云数据库。&#xA;安装libpq C驱动程序 linklibpq C是用于连接到 PostgreSQL 数据库并与之交互的 C 客户端库。有关该库的详细介绍文档，可以参考：https://www.postgresql.org/docs/11/libpq.html&#xA;① 不同环境下，可根据官方文档下载PostgreSQL库和源代码地址：https://www.postgresql.org/download/。&#xA;② linux环境下，可以使用如下命令安装连接postgresql 相关的库libpq C库。&#xA;yum install postgresql-devel&#xD;更多示例可以查看：https://www.postgresql.org/docs/11/libpq-example.html&#xA;创建MemFire Cloud云数据库 link登录MemFire Cloud平台，新建数据库，在数据库管理栏中，点击该数据库的“连接信息”，如下图所示，可以获得该数据库的连接配置信息。 编写程序 link依赖条件：gcc 4.1.2 或更高版本；&#xA;1、新建文件test.c，并编写test.c文件，代码如下：&#xA;备注说明：使用新创建的数据库连接信息替换以下代码中的数据库配置信息，包括数据库连接IP、端口、用户名、密码、数据库名称；&#xA;使用libpq的客户端程序必须包含头文件libpq-fe.h，并且必须与libpq库链接。&#xA;#include &amp;lt;stdio.h&amp;gt;&#xD;#include &amp;lt;stdlib.h&amp;gt;&#xD;#include &amp;#34;libpq-fe.h&amp;#34;&#xD;int&#xD;main(int argc, char **argv)&#xD;{&#xD;const char *conninfo;&#xD;PGconn *conn;&#xD;PGresult *res;&#xD;int nFields;&#xD;int i, j;&#xD;/* connection string */&#xD;conninfo = &amp;#34;host=xx.</description>
    </item>
    <item>
      <title></title>
      <link>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/development-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://github.com/LucaRao/MemFireCloud-docs/docs/db/example/development-example/</guid>
      <description>云数据库使用样例 linkMemFire Cloud 提供Python、Java、spring、golang、nodejs等各种开发示例，讲述如何编译执行程序，帮助用户如何采用多种语言来使用连接使用云数据库。&#xA;python示例&#xD;Java示例&#xD;Golang示例&#xD;Spring示例&#xD;Node示例&#xD;C++示例&#xD;C#示例 </description>
    </item>
  </channel>
</rss>
